{
  "swagger": "2.0",
  "info": {
    "description": "API documentation for the final project",
    "version": "Seasony v1.0",
    "title": "Final project",
    "contact": {}
  },
  "host": "",
  "basePath": "/api",
  "paths": {
    "/crops": {
      "get": {
        "tags": ["crops"],
        "summary": "Get all crops",
        "description": "Get all crops",
        "operationId": "getAllCrops",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": {
          "firebase_auth": ["read"]
        }
      }
    },
    "/batch-default-values/{batchId}": {
      "get": {
        "tags": ["default values"],
        "summary": "Get default values for specific batch by batchId",
        "description": "",
        "operationId": "getDefaultValues",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          },
          {
            "name": "batchId",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "stage",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default values returned."
          },
          "401": {
            "description": "You are not authorized to view this content."
          },
          "404": {
            "description": "A batch with the specified id was not found."
          },
          "default": {
            "description": "Unexpected error."
          }
        },
        "security": [
          {
            "fireabse_auth": ["read"]
          }
        ]
      }
    },
    "/batch-status/{batchId}": {
      "get": {
        "tags": ["batch status"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          },
          {
            "name": "batchId",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "summary": "Get status messages for the batch",
        "description": "",
        "operationId": "getBatchStatus",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful GET request"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": {
          "fireabse_auth": ["read"]
        }
      }
    },
    "/crop-stages/{batchId}": {
      "get": {
        "description": "Get crop stages.",
        "summary": "/api/crop-stages",
        "tags": ["crop-stages"],
        "operationId": "batchId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          },
          {
            "name": "batchId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sussessfull"
          }
        }
      }
    },
    "/sensor-reading/{materialId}": {
      "get": {
        "description": "Get sensor reading.",
        "summary": "/api/sensor-reading",
        "tags": ["sensor-reading"],
        "operationId": "materialId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          },
          {
            "name": "materialId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/role": {
      "get": {
        "tags": ["user role"],
        "summary": "Get a role for specific user by uid",
        "description": "",
        "operationId": "getRole",
        "produces": [
          {
            "application/json": {
              "name": "admin"
            }
          }
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          }
        ],
        "responses": {
          "200": {
            "description": "Role returned."
          },
          "401": {
            "description": "You are not authorized to view this content."
          },
          "404": {
            "description": "A user with the specified uid was not found."
          },
          "default": {
            "description": "Unexpected error."
          }
        },
        "security": [
          {
            "firebase_auth": ["read"]
          }
        ]
      }
    },
    "/users/name": {
      "get": {
        "tags": ["user name"],
        "summary": "Get a name for specific user by uid",
        "description": "",
        "operationId": "getName",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          }
        ],
        "responses": {
          "200": {
            "description": "Name returned."
          },
          "401": {
            "description": "You are not authorized to view this content."
          },
          "404": {
            "description": "Name not found."
          },
          "default": {
            "description": "Unexpected error."
          }
        },
        "security": [
          {
            "firebase_auth": ["read"]
          }
        ]
      }
    },
    "/crop-stage-parameter-values/{cropId}": {
      "get": {
        "tags": ["crop-default-values"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          },
          {
            "name": "cropId",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "summary": "Get default parameter values for a specific crop",
        "description": "Get default parameter values for a specific crop by cropId",
        "operationId": "getCropStageDefaultValuesByCropId",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful GET request"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": {
          "firebase_auth": ["read"]
        }
      }
    },
    "/batch/{batchId}": {
      "get": {
        "tags": ["batch"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          },
          {
            "name": "batchId",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "summary": "Get default parameter values for a specific batch",
        "description": "Get default parameter values for a specific batch by batchId",
        "operationId": "getBatchById",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful GET request"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": {
          "firebase_auth": ["read"]
        }
      }
    },
    "/create-batch": {
      "post": {
        "tags": ["create-batch"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          },
          {
            "name": "cropId",
            "in": "body",
            "type": "integer",
            "required": true
          },
          {
            "name": "userId",
            "in": "body",
            "type": "integer",
            "required": true
          },
          {
            "name": "customerName",
            "in": "body",
            "type": "string",
            "required": true
          },
          {
            "name": "seedPot",
            "in": "body",
            "type": "integer",
            "required": true
          },
          {
            "name": "startSeedDate",
            "in": "body",
            "type": "integer",
            "required": true
          }
        ],
        "summary": "Post values received from add batch form fields",
        "description": "Post following values received from add batch form fields: crop id, customer name, number of seeded pots, start seed date with the userId received from header), ",
        "operationId": "createBatch",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful POST request"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": {
          "firebase_auth": ["write"]
        }
      }
    },
    "/delete-specific-data/{batchId}": {
      "delete": {
        "tags": ["specific-batch"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          },
          {
            "name": "batchId",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "summary": "delete a specific batch data",
        "description": "delete a specific batch by batchId",
        "operationId": "deleteSpecificBatchById",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful delete request"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": {
          "firebase_auth": ["delete"]
        }
      }
    },
    "/create-crop": {
      "post": {
        "tags": ["create-crop"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          },
          {
            "name": "name",
            "in": "body",
            "type": "string",
            "required": true
          },
          {
            "name": "plantVariety",
            "in": "body",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "in": "body",
            "type": "integer",
            "required": true
          }
        ],
        "summary": "Post values received from add crop form fields",
        "description": "Post following values received from add crop form fields:name, plant variety with the userId received from header), ",
        "operationId": "createCrop",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful POST request"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": {
          "firebase_auth": ["write"]
        }
      }
    },
    "/batches": {
      "get": {
        "description": "Get all batches.",
        "summary": "/api/batches",
        "tags": ["batches"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Firebase token",
            "required": true,
            "type": "string",
            "default": "Bearer ENTER_FIREBASE_TOKEN"
          },
          {
            "name": "detailed",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful POST request"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "firebase_auth": {
      "type": "oauth2",
      "authorizationUrl": "seasony-login.firebaseapp.com",
      "flow": "accessCode",
      "scopes": {
        "read": "read data based on user uid",
        "write": "write data based on user uid"
      }
    }
  }
}
